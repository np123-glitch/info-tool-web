@page "/atis"
@rendermode InteractiveServer
@using ZmaReference.Features.DigitalAtis.Repositories
@implements IDisposable;

@inject DigitalAtisRepository AtisRepository;

<PageTitle>ATIS - ZMA Reference</PageTitle>

@if (_atisList is not null && _atisList.Any())
{
    foreach (var atis in _atisList)
    {
        <div class="flex mb-2">
            <div class="flex flex-col items-center w-20 shrink-0 justify-center">
                <span class="text-2xl">@atis.IcaoId[1..]</span>
            </div>
            <div class="flex items-center border border-slate-600 p-1.5 text-sm w-20 shrink-0 justify-center">
                <div class="flex flex-col items-center">
                    @if (atis.Type != Models.Atis.AtisType.Combined)
                    {
                        <span class="text-sm">@atis.Type</span>
                    }
                    <span class="font-mono text-2xl text-yellow-500">@atis.InfoLetter</span>
                    <span class="text-sm">@GetIssueTimeString(atis)</span>
                </div>
            </div>
            <div class="ml-3 flex items-center border border-slate-600 p-1.5 text-xs w-64 shrink-0">
                <span>@atis.WeatherText</span>
            </div>
            <div class="ml-3 flex items-center border border-slate-600 p-1.5 text-sm grow">
                <span>@atis.StatusText</span>
            </div>
        </div>
    }
}
else
{
    <div class="flex items-center justify-center p-8 text-gray-400">
        <div class="text-center">
            <svg class="mx-auto h-12 w-12 text-gray-400 mb-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z" />
            </svg>
            <h3 class="text-lg font-medium text-gray-300 mb-2">ATIS Information Unavailable</h3>
            <p class="text-sm text-gray-500">Unable to retrieve ATIS data at this time. Please try again later.</p>
        </div>
    </div>
}


@code {
    private readonly string[] _airports = { "KMIA", "KFLL", "KTPA", "KPBI", "KRSW" };
    private List<Models.Atis>? _atisList;

    private static string GetIssueTimeString(Models.Atis atis)
    {
        return atis.IssueTime.ToString("HH:mm");
    }

    protected override void OnInitialized()
    {
        //_atisList = AtisRepository.GetAllAtis().Where(a => _airports.Contains(a.IcaoId)).ToList();
        var allDAtis = AtisRepository.GetAllAtis();
        var filteredAirports = _airports.Select(a => allDAtis.FirstOrDefault(atis => atis.IcaoId == a));
        _atisList = filteredAirports.Where(a => a is not null).ToList()!;
        AtisRepository.NewInfoLetter += UpdateNewLetter;
        AtisRepository.NewAirportAdded += UpdateNewAirport;
    }

    private void UpdateNewAirport(object? sender, NewAirportAddedArgs e)
    {
        UpdateDisplayedAtis();
    }

    private void UpdateNewLetter(object? sender, NewInfoLetterArgs e)
    {
        UpdateDisplayedAtis();
    }

    private void UpdateDisplayedAtis()
    {
        _atisList = AtisRepository.GetAllAtis().Where(a => _airports.Contains(a.IcaoId)).ToList();
        _ = InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        AtisRepository.NewInfoLetter -= UpdateNewLetter;
        AtisRepository.NewAirportAdded -= UpdateNewAirport;
    }

}