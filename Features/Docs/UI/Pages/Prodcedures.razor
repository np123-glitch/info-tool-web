@page "/procedures"
@using Microsoft.Extensions.Options
@using ZmaReference.Features.Docs.Repositories
@rendermode InteractiveServer

@inject DocumentRepository DocumentRepository
@inject IOptionsMonitor<AppSettings> AppSettings
@inject ProtectedSessionStorage ProtectedSessionStore

<PageTitle>Procedures - ZMA Reference</PageTitle>

<div>
    <select @bind="_displayedPdfUrl" @bind:after="UpdateStoredUrl" class="p-2 bg-gray-700 text-gray-100 w-[600px]">
        @foreach (var category in DocumentRepository.Categories)
        {
            <optgroup label="@category.Name" class="text-gray-400">
                @foreach (var doc in category.Documents)
                {
                    @if (!string.IsNullOrEmpty(doc.Url))
                    {
                        <option value="@doc.Url" class="text-gray-100">@doc.Name</option>
                    }
                    else
                    {
                        <option disabled class="text-gray-500">@doc.Name (No PDF available)</option>
                    }
                }
            </optgroup>
        }
    </select>
</div>
@if (!string.IsNullOrEmpty(_displayedPdfUrl))
{
    <div class="grow flex items-stretch">
        <div class="w-full mt-2">
            <!-- Embed PDF directly from URL using iframe -->
            <iframe class="pt-1 h-full w-full" src="@_displayedPdfUrl" frameborder="0">
                <div class="flex flex-col items-center justify-center h-full text-gray-300">
                    <p class="mb-4">Unable to display PDF in browser.</p>
                    <div class="flex gap-4">
                        <a href="@_displayedPdfUrl" target="_blank" class="px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700">
                            Open PDF in New Tab
                        </a>
                    </div>
                </div>
            </iframe>
        </div>
    </div>
}

@code {

    private string _displayedPdfUrl = "";

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var savedStateTask = await ProtectedSessionStore.GetAsync<string>("proceduresPdfUrl");
            if (savedStateTask.Success && savedStateTask.Value is not null)
            {
                _displayedPdfUrl = savedStateTask.Value;
                StateHasChanged();
            }
            else
            {
                // Set default selection to first available document
                var firstDocument = DocumentRepository.Categories
                    .SelectMany(c => c.Documents)
                    .FirstOrDefault(d => !string.IsNullOrEmpty(d.Url));
                
                if (firstDocument != null)
                {
                    _displayedPdfUrl = firstDocument.Url;
                    await UpdateStoredUrl();
                    StateHasChanged();
                }
            }
        }
    }







    private async Task UpdateStoredUrl()
    {
        await ProtectedSessionStore.SetAsync("proceduresPdfUrl", _displayedPdfUrl);
    }

}
